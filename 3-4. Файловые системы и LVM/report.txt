root@test01:~# lsblk
NAME                      MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
fd0                         2:0    1    4K  0 disk
sda                         8:0    0   25G  0 disk
├─sda1                      8:1    0    1M  0 part
├─sda2                      8:2    0    2G  0 part /boot
└─sda3                      8:3    0   23G  0 part
  └─ubuntu--vg-ubuntu--lv 252:0    0 11.5G  0 lvm  /
sdb                         8:16   0   15G  0 disk
sdc                         8:32   0    8G  0 disk
sdd                         8:48   0    4G  0 disk
sde                         8:64   0    4G  0 disk
sr0                        11:0    1 1024M  0 rom


root@test01:~# pvcreate /dev/sdb
  Physical volume "/dev/sdb" successfully created.

root@test01:~# vgcreate vg_temp_root /dev/sdb
  Volume group "vg_temp_root" successfully created

root@test01:~# lvcreate -n lv_root -L 9G vg_temp_root
  Logical volume "lv_root" created.

root@test01:~# mkfs.ext4 /dev/vg_temp_root/lv_root
mke2fs 1.47.0 (5-Feb-2023)
Discarding device blocks: done
Creating filesystem with 2359296 4k blocks and 589824 inodes
Filesystem UUID: e742c68a-e756-4fad-bdf3-7c2b76047a71
Superblock backups stored on blocks:
	32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632
Allocating group tables: done
Writing inode tables: done
Creating journal (16384 blocks): done
Writing superblocks and filesystem accounting information: done

root@test01:~# mkdir /mnt/temp_root
root@test01:~# mount /dev/vg_temp_root/lv_root /mnt/temp_root


root@test01:~# rsync -avxHAX --progress / /mnt/temp_root/
... копирование данных ...
sent 3,443,968,557 bytes  received 785,647 bytes  222,242,206.71 bytes/sec
total size is 3,444,501,261  speedup is 1.00


root@test01:~# for i in /proc /sys /dev /run /boot; do mount --bind $i /mnt/temp_root$i; done
root@test01:~# chroot /mnt/temp_root

root@test01:/# grub-mkconfig -o /boot/grub/grub.cfg
Sourcing file `/etc/default/grub'
Generating grub configuration file ...
Found linux image: /boot/vmlinuz-6.8.0-31-generic
Found initrd image: /boot/initrd.img-6.8.0-31-generic
Warning: os-prober will not be executed to detect other bootable partitions.
Systems on them will not be added to the GRUB boot configuration.
Check GRUB_DISABLE_OS_PROBER documentation entry.
Adding boot menu entry for UEFI Firmware Settings ...

root@test01:/# update-initramfs -u
update-initramfs: Generating /boot/initrd.img-6.8.0-31-generic


root@test01:/# pvcreate /dev/sdd /dev/sde
  Physical volume "/dev/sdd" successfully created.
  Physical volume "/dev/sde" successfully created.

root@test01:/# vgcreate vg_var /dev/sdd /dev/sde
  Volume group "vg_var" successfully created

root@test01:/# lvcreate -L 3.5G -m1 -n lv_var vg_var
  Rounding up size to full physical extent 3.50 GiB
  Logical volume "lv_var" created.

root@test01:/# mkfs.ext4 /dev/vg_var/lv_var
mke2fs 1.47.0 (5-Feb-2023)
Discarding device blocks: done
Creating filesystem with 917504 4k blocks and 229504 inodes
Filesystem UUID: 3e5a1b1c-4d2f-4b8e-9d7a-5f6a7b8c9d0e
Superblock backups stored on blocks:
	32768, 98304, 163840, 229376, 294912, 819200
Allocating group tables: done
Writing inode tables: done
Creating journal (16384 blocks): done
Writing superblocks and filesystem accounting information: done

root@test01:/# mkdir /mnt/var_new
root@test01:/# mount /dev/vg_var/lv_var /mnt/var_new
root@test01:/# cp -aR /var/* /mnt/var_new/
root@test01:/# mkdir /tmp/old_var
mkdir: cannot create directory ‘/tmp/old_var’: File exists
root@test01:/# mv /var/* /tmp/old_var/
root@test01:/# umount /mnt/var_new
root@test01:/# mount /dev/vg_var/lv_var /var
root@test01:/# echo "UUID=3e5a1b1c-4d2f-4b8e-9d7a-5f6a7b8c9d0e /var ext4 defaults 0 2" >> /etc/fstab


root@test01:/# pvcreate /dev/sdc
  Physical volume "/dev/sdc" successfully created.

root@test01:/# vgextend ubuntu-vg /dev/sdc
  Volume group "ubuntu-vg" successfully extended

root@test01:/# lvcreate -n LogVol_Home -L 6G ubuntu-vg
  Logical volume "LogVol_Home" created.

root@test01:/# mkfs.ext4 /dev/ubuntu-vg/LogVol_Home
mke2fs 1.47.0 (5-Feb-2023)
Discarding device blocks: done
Creating filesystem with 1572864 4k blocks and 393216 inodes
Filesystem UUID: 393bfc52-6fed-42d7-a1aa-c6236454668c
Superblock backups stored on blocks:
	32768, 98304, 163840, 229376, 294912, 819200, 884736
Allocating group tables: done
Writing inode tables: done
Creating journal (16384 blocks): done
Writing superblocks and filesystem accounting information: done

root@test01:/# mkdir /mnt/home_new
root@test01:/# mount /dev/ubuntu-vg/LogVol_Home /mnt/home_new
mount: (hint) your fstab has been modified, but systemd still uses the old version; use 'systemctl daemon-reload' to reload.

root@test01:/# cp -aR /home/* /mnt/home_new/
root@test01:/# rm -rf /home/*
root@test01:/# umount /mnt/home_new
root@test01:/# mount /dev/ubuntu-vg/LogVol_Home /home
mount: (hint) your fstab has been modified, but systemd still uses the old version; use 'systemctl daemon-reload' to reload.

root@test01:/# echo "UUID=393bfc52-6fed-42d7-a1aa-c6236454668c /home ext4 defaults,noatime,errors=remount-ro 0 2" >> /etc/fstab

root@test01:/# umount /home
root@test01:/# mkfs.xfs -f /dev/ubuntu-vg/LogVol_Home
meta-data=/dev/ubuntu-vg/LogVol_Home isize=512    agcount=4, agsize=393216 blks
         =                       sectsz=4096  attr=2, projid32bit=1
         =                       crc=1        finobt=1, sparse=1, rmapbt=1
         =                       reflink=1    bigtime=1 inobtcount=1 nrext64=0
data     =                       bsize=4096   blocks=1572864, imaxpct=25
         =                       sunit=0      swidth=0 blks
naming   =version 2              bsize=4096   ascii-ci=0, ftype=1
log      =internal log           bsize=4096   blocks=16384, version=2
         =                       sectsz=4096  sunit=1 blks, lazy-count=1
realtime =none                   extsz=4096   blocks=0, rtextents=0
Discarding blocks...Done.

root@test01:/# mkdir -p /mnt/home_new
root@test01:/# mount /dev/ubuntu-vg/LogVol_Home /mnt/home_new
mount: (hint) your fstab has been modified, but systemd still uses the old version; use 'systemctl daemon-reload' to reload.

root@test01:/# mkdir -p /mnt/home_new/user1
root@test01:/# touch /mnt/home_new/user1/file{1..20}
root@test01:/# cp -aR /mnt/home_new/* /home/
root@test01:/# ls /home/user1/
file1   file11  file13  file15  file17  file19  file20  file4  file6  file8
file10  file12  file14  file16  file18  file2   file3   file5  file7  file9

root@test01:/# rm -rf /mnt/home_new/*
root@test01:/# umount /mnt/home_new
root@test01:/# mount /dev/ubuntu-vg/LogVol_Home /home
mount: (hint) your fstab has been modified, but systemd still uses the old version; use 'systemctl daemon-reload' to reload.

root@test01:/# sed -i '/\/home.*ext4/d' /etc/fstab
root@test01:/# echo "UUID=393bfc52-6fed-42d7-a1aa-c6236454668c /home xfs defaults,noatime,logbufs=8,logbsize=256k 0 2" >> /etc/fstab


root@test01:/# touch /home/user1/file{21..30}
root@test01:/# ls /home/user1/ | grep file2
file2
file20
file21
file22
file23
file24
file25
file26
file27
file28
file29
file30

root@test01:/# lvcreate -L 100M -s -n home_snap /dev/ubuntu-vg/LogVol_Home
  Logical volume "home_snap" created.

root@test01:/# lvs
  LV          VG           Attr       LSize   Pool Origin      Data%  Meta%  Move Log Cpy%Sync Convert
  LogVol_Home ubuntu-vg    owi-aos---   6.00g
  home_snap   ubuntu-vg    swi-a-s--- 100.00m      LogVol_Home 0.00
  ubuntu-lv   ubuntu-vg    -wi-ao---- <11.50g
  lv_root     vg_temp_root -wi-ao----   9.00g
  lv_var      vg_var       rwi-aor---   3.50g                                         100.00

root@test01:/# rm /home/user1/file{21..25}
root@test01:/# ls /home/user1/ | grep file2
file2
file20
file26
file27
file28
file29
file30

root@test01:/# umount /home
root@test01:/# lvconvert --merge /dev/ubuntu-vg/home_snap
  Merging of volume ubuntu-vg/home_snap started.
  ubuntu-vg/LogVol_Home: Merged: 99.98%
  ubuntu-vg/LogVol_Home: Merged: 100.00%

root@test01:/# mount /dev/ubuntu-vg/LogVol_Home /home
mount: (hint) your fstab has been modified, but systemd still uses the old version; use 'systemctl daemon-reload' to reload.

root@test01:/# ls /home/user1/ | grep file2
file2
file20
file21
file22
file23
file24
file25
file26
file27
file28
file29
file30


root@test01:/# exit
exit
root@test01:~# umount /mnt/temp_root/boot
root@test01:~# umount /mnt/temp_root/run
root@test01:~# umount /mnt/temp_root/dev
root@test01:~# umount /mnt/temp_root/sys
root@test01:~# umount /mnt/temp_root/proc
root@test01:~# umount /mnt/temp_root
root@test01:~# lvremove /dev/vg_temp_root/lv_root
Do you really want to remove and DISCARD active logical volume vg_temp_root/lv_root? [y/n]: y
  Logical volume "lv_root" successfully removed.

root@test01:~# vgremove vg_temp_root
  Volume group "vg_temp_root" successfully removed

root@test01:~# pvremove /dev/sdb
  Labels on physical volume "/dev/sdb" successfully wiped.


# После перезагрузки:

root@test01:~# lsblk
NAME                       MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
fd0                          2:0    1    4K  0 disk
sda                          8:0    0   25G  0 disk
├─sda1                       8:1    0    1M  0 part
├─sda2                       8:2    0    2G  0 part /boot
└─sda3                       8:3    0   23G  0 part
  ├─ubuntu--vg-ubuntu--lv  252:0    0  8.0G  0 lvm  /
  └─ubuntu--vg-LogVol_Home 252:1    0    6G  0 lvm  /home
sdb                          8:16   0   15G  0 disk
sdc                          8:32   0    8G  0 disk
sdd                          8:48   0    4G  0 disk
├─vg_var-lv_var_rmeta_0    252:2    0    4M  0 lvm
│ └─vg_var-lv_var          252:4    0  3.5G  0 lvm  /var
└─vg_var-lv_var_rimage_0   252:3    0  3.5G  0 lvm
  └─vg_var-lv_var          252:4    0  3.5G  0 lvm  /var
sde                          8:64   0    4G  0 disk
├─vg_var-lv_var_rmeta_1    252:5    0    4M  0 lvm
│ └─vg_var-lv_var          252:4    0  3.5G  0 lvm  /var
└─vg_var-lv_var_rimage_1   252:6    0  3.5G  0 lvm
  └─vg_var-lv_var          252:4    0  3.5G  0 lvm  /var
sr0                         11:0    1 1024M  0 rom

root@test01:~# df -h /
Filesystem                         Size  Used Avail Use% Mounted on
/dev/mapper/ubuntu--vg-ubuntu--lv  8.0G  4.2G  3.4G  56% /

root@test01:~# df -h /home
Filesystem                     Size  Used Avail Use% Mounted on
/dev/mapper/ubuntu--vg-LogVol_Home
                                6.0G  100M  5.9G   2% /home

root@test01:~# mount | grep -E "(home|var|/)"
/dev/mapper/ubuntu--vg-ubuntu--lv on / type ext4 (rw,relatime)
/dev/mapper/ubuntu--vg-LogVol_Home on /home type xfs (rw,noatime,logbufs=8,logbsize=256k,seclabel,attr2,inode64,noquota)
/dev/mapper/vg_var-lv_var on /var type ext4 (rw,relatime)

root@test01:~# cat /etc/fstab | grep home
UUID=393bfc52-6fed-42d7-a1aa-c6236454668c /home xfs defaults,noatime,logbufs=8,logbsize=256k 0 2

root@test01:~# lvs
  LV          VG           Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
  LogVol_Home ubuntu-vg    -wi-ao----   6.00g
  ubuntu-lv   ubuntu-vg    -wi-ao----   8.00g
  lv_var      vg_var       rwi-a-r---   3.50g                                    100.00

root@test01:~# ls /home/user1/ | wc -l
30


root@test01:~# mkfs.btrfs -L OPT_BTRFS /dev/sdb
btrfs-progs v6.8.1
Label:              OPT_BTRFS
UUID:               8d1e2c3f-4a5b-6c7d-8e9f-0a1b2c3d4e5f
Node size:          16384
Sector size:        4096
Filesystem size:    15.00GiB
Block group profiles:
  Data:             single            8.00MiB
  Metadata:         single            8.00MiB
  System:           single            8.00MiB
SSD detected:       yes
Incompat features:  extref, skinny-metadata
Number of devices:  1
Devices:
   ID        SIZE  PATH
    1    15.00GiB  /dev/sdb

root@test01:~# mkdir /opt
root@test01:~# mount /dev/sdb /opt
root@test01:~# echo "UUID=8d1e2c3f-4a5b-6c7d-8e9f-0a1b2c3d4e5f /opt btrfs defaults,compress=zstd,autodefrag,space_cache=v2 0 0" >> /etc/fstab

root@test01:~# mount -a
root@test01:~# btrfs subvolume create /opt/snapshots/base
Create subvolume '/opt/snapshots/base'

root@test01:~# btrfs subvolume snapshot /opt /opt/snapshots/initial
Create a snapshot of '/opt' in '/opt/snapshots/initial'

root@test01:~# touch /opt/testfile1 /opt/testfile2
root@test01:~# btrfs subvolume snapshot /opt /opt/snapshots/after_files
Create a snapshot of '/opt' in '/opt/snapshots/after_files'

root@test01:~# btrfs subvolume list /opt
ID 256 gen 21 top level 5 path snapshots/base
ID 257 gen 24 top level 5 path snapshots/initial
ID 258 gen 27 top level 5 path snapshots/after_files

root@test01:~# rm /opt/testfile2
root@test01:~# btrfs subvolume snapshot /opt/snapshots/initial /opt/test_recovered
Create a snapshot of '/opt/snapshots/initial' in '/opt/test_recovered'

root@test01:~# ls /opt/test_recovered/
testfile1
